"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuildPaymentUrlDTO = void 0;
const class_validator_1 = require("class-validator");
const enums_1 = require("../enums");
class BuildPaymentUrlDTO {
    constructor(data) {
        this.vnp_Version = data.vnp_Version;
        this.vnp_Command = data.vnp_Command;
        this.vnp_TmnCode = data.vnp_TmnCode;
        this.vnp_Amount = data.vnp_Amount;
        this.vnp_BankCode = data.vnp_BankCode;
        this.vnp_CreateDate = data.vnp_CreateDate;
        this.vnp_CurrCode = data.vnp_CurrCode;
        this.vnp_IpAddr = data.vnp_IpAddr;
        this.vnp_Locale = data.vnp_Locale;
        this.vnp_OrderInfo = data.vnp_OrderInfo;
        this.vnp_OrderType = data.vnp_OrderType;
        this.vnp_ReturnUrl = data.vnp_ReturnUrl;
        this.vnp_TxnRef = data.vnp_TxnRef;
    }
}
exports.BuildPaymentUrlDTO = BuildPaymentUrlDTO;
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.Length)(1, 8)
], BuildPaymentUrlDTO.prototype, "vnp_Version", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.Length)(1, 16)
], BuildPaymentUrlDTO.prototype, "vnp_Command", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.Length)(8, 8)
], BuildPaymentUrlDTO.prototype, "vnp_TmnCode", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Min)(1),
    (0, class_validator_1.Max)(999999999999)
], BuildPaymentUrlDTO.prototype, "vnp_Amount", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.Length)(3, 20)
], BuildPaymentUrlDTO.prototype, "vnp_BankCode", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Min)(10000000000000, { message: 'vnp_CreateDate length must be 14' }),
    (0, class_validator_1.Max)(99999999999999, { message: 'vnp_CreateDate length must be 14' })
], BuildPaymentUrlDTO.prototype, "vnp_CreateDate", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.Length)(3, 3),
    (0, class_validator_1.IsEnum)(enums_1.VnpCurrCode)
], BuildPaymentUrlDTO.prototype, "vnp_CurrCode", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.IsIP)(),
    (0, class_validator_1.Length)(7, 45)
], BuildPaymentUrlDTO.prototype, "vnp_IpAddr", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsEnum)(enums_1.VnpLocale),
    (0, class_validator_1.Length)(2, 5)
], BuildPaymentUrlDTO.prototype, "vnp_Locale", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)({ message: 'vnp_OrderInfo is required' }),
    (0, class_validator_1.IsString)({ message: 'vnp_OrderInfo must be string' }),
    (0, class_validator_1.Length)(1, 255)
], BuildPaymentUrlDTO.prototype, "vnp_OrderInfo", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Length)(1, 100)
], BuildPaymentUrlDTO.prototype, "vnp_OrderType", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsUrl)(),
    (0, class_validator_1.Length)(10, 255)
], BuildPaymentUrlDTO.prototype, "vnp_ReturnUrl", void 0);
__decorate([
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.Length)(1, 100)
], BuildPaymentUrlDTO.prototype, "vnp_TxnRef", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)()
], BuildPaymentUrlDTO.prototype, "vnp_SecretKey", void 0);
